Method  1 - Iterative method

public class Solution { 

    public static int binarySearch(int[] arr, int x) {
        int start=0,end=arr.length-1;
        int mid;
        while(start<=end){
            mid=(start+end)/2;
            if(arr[mid]>x){
                end = mid -1;
            }
            else if(arr[mid]<x){
                start=mid+1;
            }
            else{
                return mid;
            }
        }
        return -1;
    }
}


Method 2 - Using recursion 

public class Solution { 

    public static int binarySearch(int[] arr, int x) {
        return binarySearch(arr, x, 0 ,arr.length-1);
    }

    private static int binarySearch(int[] arr, int x, int si, int ei){
        if(arr.length==0){
            return -1;
        }
        if(si>ei){
            return -1;
        }
        int midIndex= (si+ei)/2;
        if(arr[midIndex]==x){
            return midIndex;
        }else if(arr[midIndex]<x){
            return  binarySearch(arr, x, midIndex+1, ei);
        }else{
          return  binarySearch(arr, x, si, midIndex-1);
        }
    }

}
